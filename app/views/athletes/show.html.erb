<h1>Details for <%= @athlete.name %></h1>

<div class="details">
	<% if @athlete.graduating_class %>
		Class of <%= @athlete.graduating_class %>
	<% end %>
	<br>
	<% if @athlete.url %>
		<a href="<%= @athlete.url %>"><%= @athlete.url %></a>
	<% end %>
</div>

<% if @athlete.has_data? %>
	<!-- TEXT VERSION -->
	<!-- <ul>
		<% @marks_by_event.keys.each do |event_name| %>
			<li><%= event_name %></li>
			<% if @marks_by_event[event_name]["Indoor"] %>
				<ul>
					<li>Indoor</li>
					<ul>
						<% @marks_by_event[event_name]["Indoor"].reverse.each do |mark| %>
							<li><%= mark.year %> - <%= format(mark) %></li>
						<% end %>
					</ul>
				</ul>
			<% end %>
			<% if @marks_by_event[event_name]["Outdoor"] %>
				<ul>
					<li>Outdoor</li>
					<ul>
						<% @marks_by_event[event_name]["Outdoor"].reverse.each do |mark| %>
							<li><%= mark.year %> - <%= format(mark) %></li>
						<% end %>
					</ul>
				</ul>
			<% end %>
		<% end %>
	</ul> -->
	<!-- TEXT VERSION -->

	<% @marks_by_event.keys.each do |event_name| %>
		<div id="<%= event_name.gsub(" ", "-") %>" class="graph"></div>
	<% end %>

	<% if current_user.type == "Admin" %>
		<a href="<%= edit_athlete_url(@athlete) %>">Update Data</a>
		<br>
	<% else %>
		<form action="<%= athlete_url(@athlete) %>" method="POST">
			<%= auth_token %>
			<input type="hidden" name="_method" value="PUT">
			<input type="submit" value="Update Data">
		</form>
	<% end %>
<% else %>
	<a href="<%= new_athlete_mark_url(@athlete.id) %>">Import Data</a>
	<br>
<% end %>

<a href="<%= athletes_url %>">Back to all athletes...</a>

<script>
	$(function () {
		var athlete_data;
		var isMobile = screen.width <= 480;

		$.get("/athletes/<%=raw @athlete.id %>/graph_data", function (data) {
			athlete_data = data;

			for (var key in athlete_data) {
				
				$("#" + key.replace(" ", "-")).highcharts({
					chart: { type: "line" },
					title: { text: key },
					tooltip: {
						enabled: true,
						formatter: function () {
							var formattedY;
							var eventName = this.series.chart.title.text;
							if (athlete_data[eventName].is_running_event) {
								formattedY = this.y.formatTime();
							} else {
								formattedY = this.y.toFixed(2);
							}

							return '<b>' + this.series.name + '</b><br>' + 
							this.x +': '+ formattedY;
						}
					},
					plotOptions: {
						line: {
							dataLabels: { 
								enabled: isMobile,
								formatter: function () {
									var formattedY;
									var eventName = this.series.chart.title.text;
									if (athlete_data[eventName].is_running_event) {
										formattedY = this.y.formatTime();
									} else {
										formattedY = this.y.toFixed(2);
									}
									
									return formattedY;
								}
							}
						}
					},
					xAxis: { categories: athlete_data[key].years },
					yAxis: { 
						title: { text: athlete_data[key].units },
						labels: {
							formatter: function () {
								var eventName = this.chart.title.text;
								if (athlete_data[eventName].is_running_event) {
									return this.value.formatTime();
								} else {
									return this.value.toFixed(2);
								}
							}
						}
					},
					series: athlete_data[key].series
				})
			}

		});

	});
</script>